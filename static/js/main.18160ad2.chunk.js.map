{"version":3,"sources":["store/actions.ts","store/index.ts","store/selectors.ts","components/CurrentUser/CurrentUser.tsx","api/todos.ts","api/user.ts","components/TodosList/TodosList.tsx","App.tsx","index.tsx"],"names":["LOAD_TODOS","LOAD_USER","loadTodosAction","payload","type","loadUserAction","initialState","todos","user","store","createStore","state","action","getTodosSelector","getUserSelector","CurrentUser","useSelector","dispatch","useDispatch","className","id","name","email","phone","onClick","API_URL","getTodos","a","fetch","response","json","deleteTodo","method","getUser","userId","TodoList","useState","query","setQuery","selectorValue","setSelectorValue","handleSelectUser","userFromServer","handleDeleteTodo","todosFromServer","useEffect","loadTodosFromServer","getFiltredTodos","todos1","status","filter","todo","completed","filteredTodoList","filterTodos","lowerCaseQuery","toLowerCase","title","includes","getFilteredData","placeholder","value","onChange","event","target","randomOrder","sort","Math","random","handleRandomizer","map","cn","htmlFor","checked","readOnly","App","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18160ad2.chunk.js","sourcesContent":["export const LOAD_TODOS = 'LOAD_TODOS';\nexport const LOAD_USER = 'LOAD_USER';\nexport const QUERY = 'QUERY';\n\nexport const loadTodosAction = (payload: Todo[]) => ({\n  type: LOAD_TODOS,\n  payload,\n});\n\nexport const loadUserAction = (payload: User | null) => ({\n  type: LOAD_USER,\n  payload,\n});\n","import { createStore } from 'redux';\nimport { LOAD_TODOS, LOAD_USER } from './actions';\n\nconst initialState: State = {\n  todos: [],\n  user: null,\n};\n\nconst reducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case LOAD_TODOS:\n      return {\n        ...state,\n        todos: [...action.payload],\n      };\n    case LOAD_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\n\nexport default store;\n","export const getTodosSelector = (state: State) => state.todos;\nexport const getUserSelector = (state: State) => state.user;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadUserAction } from '../../store/actions';\nimport { getUserSelector } from '../../store/selectors';\n\nexport const CurrentUser: React.FC = () => {\n  const user = useSelector(getUserSelector);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"CurrentUser\">\n      {user ? (\n        <>\n          <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${user.id}`}</span></h2>\n          <h3 className=\"CurrentUser__name\">{user.name}</h3>\n          <p className=\"CurrentUser__email\">{user.email}</p>\n          <p className=\"CurrentUser__phone\">{user.phone}</p>\n          <button\n            className=\"\n              TodoList__user-button\n              TodoList__user-button--selected\n              button\n            \"\n            type=\"button\"\n            onClick={() => dispatch(loadUserAction(null))}\n          >\n            Clear\n          </button>\n        </>\n      ) : <p>User not found...</p>}\n    </div>\n  );\n};\n","const API_URL = 'https://mate.academy/students-api/todos';\n\nexport async function getTodos(): Promise<Todo[]> {\n  const response = await fetch(API_URL);\n\n  return response.json();\n}\n\nexport const deleteTodo = async (id: number) => {\n  const response = await fetch(`${API_URL}/${id}`, {\n    method: 'DELETE',\n  });\n\n  return response.json();\n};\n","const API_URL = 'https://mate.academy/students-api/users/';\n\nexport async function getUser(userId: number): Promise<User> {\n  const response = await fetch(`${API_URL}${userId}`);\n\n  return response.json();\n}\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport './TodoList.scss';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteTodo, getTodos } from '../../api/todos';\nimport { loadTodosAction, loadUserAction } from '../../store/actions';\nimport { getTodosSelector } from '../../store/selectors';\nimport { getUser } from '../../api/user';\n\nexport const TodoList: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const [selectorValue, setSelectorValue] = useState(0);\n\n  const dispatch = useDispatch();\n\n  const todos = useSelector(getTodosSelector);\n\n  const handleRandomizer = () => {\n    const randomOrder = todos.sort(() => Math.random() - 0.5);\n\n    dispatch(loadTodosAction(randomOrder));\n  };\n\n  const handleSelectUser = async (userId: number) => {\n    try {\n      const userFromServer = await getUser(userId);\n\n      dispatch(loadUserAction(userFromServer));\n    } catch (error) {\n      dispatch(loadUserAction(null));\n    }\n  };\n\n  const handleDeleteTodo = async (id: number) => {\n    await deleteTodo(id);\n    const todosFromServer = await getTodos();\n\n    dispatch(loadTodosAction(todosFromServer));\n  };\n\n  useEffect(() => {\n    const loadTodosFromServer = async () => {\n      const todosFromServer = await getTodos();\n\n      dispatch(loadTodosAction(todosFromServer));\n    };\n\n    loadTodosFromServer();\n  }, []);\n\n  const getFiltredTodos = (todos1: Todo[], status: boolean) => {\n    return todos1.filter(todo => todo.completed === status);\n  };\n\n  const getFilteredData = () => {\n    if (query) {\n      const filterTodos = todos.filter((todo) => {\n        const lowerCaseQuery = query.toLowerCase();\n\n        return (\n          todo.title.toLowerCase().includes(lowerCaseQuery)\n        );\n      });\n\n      if (selectorValue === 1) {\n        return getFiltredTodos(filterTodos, false);\n      }\n\n      if (selectorValue === 2) {\n        return getFiltredTodos(filterTodos, true);\n      }\n\n      return filterTodos;\n    }\n\n    switch (selectorValue) {\n      case 1:\n        return getFiltredTodos(todos, false);\n      case 2:\n        return getFiltredTodos(todos, true);\n      default:\n        return todos;\n    }\n  };\n\n  const filteredTodoList = getFilteredData();\n\n  return (\n    <div className=\"TodoList\">\n      <input\n        type=\"text\"\n        id=\"search-query\"\n        className=\"input\"\n        placeholder=\"Type search word\"\n        value={query}\n        onChange={event => setQuery(event.target.value)}\n      />\n\n      <select\n        className=\"select\"\n        value={selectorValue}\n        onChange={event => setSelectorValue(+event.target.value)}\n      >\n        <option value=\"0\">all</option>\n        <option className=\"select select--active\" value=\"1\">active</option>\n        <option className=\"select select--completed\" value=\"2\">completed</option>\n      </select>\n\n      <button\n        type=\"button\"\n        className=\"\n          TodoList__user-button\n          TodoList__user-button--selected\n          button\n        \"\n        onClick={() => handleRandomizer()}\n      >\n        Randomize\n      </button>\n\n      <h2>Todos:</h2>\n\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {filteredTodoList.map(todo => (\n            <li key={todo.id} className={cn('TodoList__item', { 'TodoList__item--unchecked': !todo.completed }, { 'TodoList__item--checked': todo.completed })}>\n              <label htmlFor={`Todo-${todo.id}`}>\n                <input\n                  id={`Todo-${todo.id}`}\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  readOnly\n                />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                className=\"\n                  TodoList__user-button\n                  TodoList__user-button--selected\n                  button\n                \"\n                type=\"button\"\n                onClick={() => handleSelectUser(todo.userId)}\n              >\n                {todo.userId}\n              </button>\n              <button\n                className=\"\n                  TodoList__user-button\n                  TodoList__user-button--selected\n                  button\n                \"\n                type=\"button\"\n                onClick={() => handleDeleteTodo(todo.id)}\n              >\n                Remove\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { CurrentUser } from './components/CurrentUser';\nimport { TodoList } from './components/TodosList';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          <CurrentUser />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root: React.FC = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}